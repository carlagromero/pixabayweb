{"version":3,"sources":["components/Search.js","components/Image.js","components/Navigation.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Search","searchRef","React","createRef","handleSubmit","e","preventDefault","_this","props","search","current","value","react_default","a","createElement","onSubmit","this","className","ref","type","placeholder","Component","Image","_props$image","image","largeImageURL","likes","previewURL","tags","views","src","alt","href","target","rel","Navigation","showPrevPage","onClick","previousPage","showNextPage","nextPage","Result","showImages","images","length","Fragment","map","i","components_Image","key","id","showPagination","components_Navigation","page","App","scrollRef","state","term","perPage","total","totalPage","loading","requestPixabayApi","_callee","_this$state","url","regenerator_default","wrap","_context","prev","next","setState","concat","fetch","then","response","json","data","hits","totalHits","Math","ceil","t0","stop","prevState","scroll","scrollIntoView","_this$state2","spinner","components_Search","components_Result","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a41d6d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  searchRef = React.createRef();\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.search(this.searchRef.current.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"form-group col-md-8\">\r\n            <input\r\n              ref={this.searchRef}\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Type your search. Eg: Movies\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-lg btn-danger btn-block\"\r\n              value=\"Search\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst Image = props => {\r\n  const { largeImageURL, likes, previewURL, tags, views } = props.image;\r\n  return (\r\n    <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={previewURL} alt={tags} />\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">{likes} likes</p>\r\n          <p className=\"card-text\">{views} views</p>\r\n\r\n          <a\r\n            href={largeImageURL}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"btn btn-primary btn-block\"\r\n          >\r\n            Open\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className=\"row py-5\">\r\n      {props.showPrevPage && (\r\n        <button\r\n          onClick={props.previousPage}\r\n          type=\"button\"\r\n          className=\"btn btn-info mr-1\"\r\n        >\r\n          &larr; Previous\r\n        </button>\r\n      )}\r\n      {props.showNextPage && (\r\n        <button\r\n          onClick={props.nextPage}\r\n          type=\"button\"\r\n          className=\"btn btn-info mr-1\"\r\n        >\r\n          Next &rarr;\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport Image from './Image';\r\nimport Navigation from './Navigation';\r\n\r\nclass Result extends Component {\r\n  showImages = () => {\r\n    const { images } = this.props;\r\n\r\n    if (images.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-12 p5 row\">\r\n          {images.map(i => (\r\n            <Image key={i.id} image={i} />\r\n          ))}\r\n        </div>\r\n        {this.props.showPagination && (\r\n          <Navigation\r\n            page={this.props.page}\r\n            nextPage={this.props.nextPage}\r\n            showPrevPage={this.props.showPrevPage}\r\n            showNextPage={this.props.showNextPage}\r\n            previousPage={this.props.previousPage}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  render() {\r\n    return <React.Fragment>{this.showImages()}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\nimport Search from './components/Search';\nimport Result from './components/Result';\nimport './Spinner.css';\n\nclass App extends Component {\n  scrollRef = React.createRef();\n\n  state = {\n    term: '',\n    images: [],\n    page: '',\n    perPage: 5,\n    total: 0,\n    totalPage: '',\n    loading: false,\n    showPagination: true\n  };\n\n  requestPixabayApi = async () => {\n    this.setState({ loading: true });\n    const { term, page, perPage } = this.state;\n\n    const url = `https://pixabay.com/api/?key=12342145-f3a4e917d6400a0088e553083&q=${term}&per_page=${perPage}&page=${page}`;\n\n    try {\n      await fetch(url)\n        .then(response => response.json())\n        .then(data =>\n          this.setState({\n            images: data.hits,\n            loading: false,\n            showPagination: data.totalHits > perPage,\n            total: data.totalHits,\n            totalPage: Math.ceil(data.totalHits / perPage)\n          })\n        );\n    } catch (error) {\n      this.setState({ loading: false });\n    }\n  };\n\n  search = term => {\n    this.setState({ term, page: 1 }, () => {\n      this.requestPixabayApi();\n    });\n  };\n\n  nextPage = () => {\n    this.setState(\n      prevState => ({\n        page: prevState.page + 1\n      }),\n      () => {\n        this.requestPixabayApi();\n        this.scroll();\n      }\n    );\n  };\n\n  previousPage = () => {\n    this.setState(\n      prevState => {\n        if (prevState.page === 1) {\n          return null;\n        }\n        return {\n          page: prevState.page - 1\n        };\n      },\n      () => {\n        this.requestPixabayApi();\n        this.scroll();\n      }\n    );\n  };\n\n  scroll = () => {\n    this.scrollRef.current.scrollIntoView('smooth', 'start');\n  };\n\n  render() {\n    const { images, page, loading, showPagination, totalPage } = this.state;\n\n    const spinner = (\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\" />\n        <div className=\"double-bounce2\" />\n      </div>\n    );\n\n    return (\n      <div className=\"app container\">\n        <div ref={this.scrollRef} className=\"jumbotron\">\n          <p className=\"lead text-center\">Image Search</p>\n          <Search search={this.search} />\n        </div>\n        <div className=\"row justify-content-center\">\n          {loading ? (\n            spinner\n          ) : (\n            <Result\n              images={images}\n              page={page}\n              nextPage={this.nextPage}\n              previousPage={this.previousPage}\n              showPrevPage={page !== 1}\n              showNextPage={totalPage !== page}\n              showPagination={showPagination}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}